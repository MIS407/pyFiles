{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf130
{\fonttbl\f0\fnil\fcharset0 Georgia;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red49\green49\blue49;\red251\green251\blue251;\red34\green107\blue170;
\red222\green53\blue46;\red38\green38\blue38;\red14\green110\blue109;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs56 \cf2 \cb3 \expnd0\expndtw0\kerning0
Managing Python\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf2 \cb3 Contents\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\b0 \cf4 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Managing Python\cf2 \cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Check Python versions\cf2 \cb1 \
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Install a different version of Python\cf2 \cb1 \
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Use a different version of Python\cf2 \cb1 \
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Create Python 2 or 3 environments\cf2 \cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\partightenfactor0
\ls1\ilvl2\cf4 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Create a Python 3.5 environment\cf2 \cb1 \
\ls1\ilvl2\cf4 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Create a Python 2.6 environment\cf2 \cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Update or Upgrade Python\cf2 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Conda treats Python the same as any other package, so it\'92s very easy to manage and update multiple installations.\cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs48 \cf2 \cb3 Check Python versions\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs32 \cf2 \cb3 Check to see which versions of Python are available to install:\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs24 \cf2 conda search python\
\pard\pardeftab720\partightenfactor0

\f0\b\fs48 \cf2 \cb3 Install a different version of Python\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs32 \cf2 \cb3 So now let\'92s say you need Python 3 to learn programming, but you don\'92t want to wipe out your Python 2.7 environment by updating Python. You can create and activate a new environment named snakes, and install the latest version of Python 3 as follows:\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs24 \cf2 conda create --name snakes python=3\
\pard\pardeftab720\partightenfactor0

\f1\b\fs32 \cf2 \cb3 Linux, OS X:
\b0  
\f2\fs24 \cf5 \cb1 source activate snakes
\f1\fs32 \cf2 \

\b \cb3 Windows:
\b0  
\f2\fs24 \cf5 \cb1 activate snakes
\f1\fs32 \cf2 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 TIP: It would be wise to name this environment a descriptive name like \'93python3\'94 but that is not as much fun.\cb1 \
\cb3 To verify that the snakes environment has now been added, type the command:\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs24 \cf2 conda info --envs\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf2 \cb3 Conda displays the list of all environments, with the current environment highlighted by a \'91*\'92.\cb1 \
\cb3 Verify that the snakes environment uses Python version 3:\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs24 \cf6 python\cf2  
\f3\b --
\f2\b0 \cf6 version\cf2 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs48 \cf2 \cb3 Use a different version of Python\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs32 \cf2 \cb3 To switch to the new environment with a different version of Python, you simply need to activate it. Let\'92s switch back to 2.7:\cb1 \
\pard\pardeftab720\partightenfactor0

\b \cf2 \cb3 Linux, OS X:
\b0  
\f2\fs24 \cf5 \cb1 source activate snowflakes
\f1\fs32 \cf2 \

\b \cb3 Windows:
\b0  
\f2\fs24 \cf5 \cb1 activate snowflakes
\f1\fs32 \cf2 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Verify that the snowflakes environment uses Python version 2:\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs24 \cf6 python\cf2  
\f3\b --
\f2\b0 \cf6 version\cf2 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf2 \cb3 After you are finished working in the snowflakes environment, to close it you can either deactivate it, or activate a new environment.\cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs48 \cf2 \cb3 Create Python 2 or 3 environments\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs32 \cf2 \cb3 Anaconda supports Python 2.6, 2.7, 3.3, 3.4, and 3.5. The default is Python 2.7 or 3.5, depending on which installer you used. If the installer you used is Anaconda or Miniconda, the default is 2.7. If the installer you used is Anaconda3 or Miniconda3, the default is 3.5.\cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs40 \cf2 \cb3 Create a Python 3.5 environment\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs32 \cf2 \cb3 To create a new environment with a different version of Python, use the 
\f2\fs24 \cf5 \cb1 conda create
\f1\fs32 \cf2 \cb3  command. In this example, we\'92ll make the new environment for Python 3.5:\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs24 \cf7 $ \cf2 conda create -n py35 \cf7 python
\f3\b \cf2 =
\f2\b0 3.5 anaconda\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf2 \cb3 Here, the \'91py35\'92 is the name of the environment you want to create, and \'91anaconda\'92 is the meta-package that includes all of the actual Python packages comprising the Anaconda distribution. When creating a new environment and installing Anaconda, you can specify the exact package and Python versions, for example, 
\f2\fs24 \cf5 \cb1 numpy=1.7
\f1\fs32 \cf2 \cb3  or 
\f2\fs24 \cf5 \cb1 python=3.5
\f1\fs32 \cf2 \cb3 .\cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs40 \cf2 \cb3 Create a Python 2.6 environment\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs32 \cf2 \cb3 In this example, we\'92ll make a new environment for Python 2.6:\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs24 \cf7 $ \cf2 conda create -n py26 \cf7 python
\f3\b \cf2 =
\f2\b0 2.6 anaconda\
\pard\pardeftab720\partightenfactor0

\f0\b\fs48 \cf2 \cb3 Update or Upgrade Python\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs32 \cf2 \cb3 If you are in an environment with Python version 3.4.2, this command will update Python to 3.4.3, which is the latest version in the 3.4 branch:\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs24 \cf7 $ \cf2 conda update python\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf2 \cb3 And this command will upgrade Python to another branch such as 3.5 by installing that version of Python:\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs24 \cf7 $ \cf2 conda install \cf7 python
\f3\b \cf2 =
\f2\b0 3.5}